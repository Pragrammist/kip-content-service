// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/FilmGrpcService.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981
#region Designer generated code

using grpc = global::Grpc.Core;

namespace GrpcFilmService {
  public static partial class FilmServiceProto
  {
    static readonly string __ServiceName = "FilmServiceProto";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcFilmService.FilmIdRequest> __Marshaller_FilmIdRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcFilmService.FilmIdRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcFilmService.IsSuccessResponse> __Marshaller_IsSuccessResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcFilmService.IsSuccessResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcFilmService.ScoreRequest> __Marshaller_ScoreRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcFilmService.ScoreRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcFilmService.FilmIdRequest, global::GrpcFilmService.IsSuccessResponse> __Method_IncrNotInterestingCount = new grpc::Method<global::GrpcFilmService.FilmIdRequest, global::GrpcFilmService.IsSuccessResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "IncrNotInterestingCount",
        __Marshaller_FilmIdRequest,
        __Marshaller_IsSuccessResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcFilmService.FilmIdRequest, global::GrpcFilmService.IsSuccessResponse> __Method_DecrNotInterestingCount = new grpc::Method<global::GrpcFilmService.FilmIdRequest, global::GrpcFilmService.IsSuccessResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DecrNotInterestingCount",
        __Marshaller_FilmIdRequest,
        __Marshaller_IsSuccessResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcFilmService.FilmIdRequest, global::GrpcFilmService.IsSuccessResponse> __Method_IncrViewsCount = new grpc::Method<global::GrpcFilmService.FilmIdRequest, global::GrpcFilmService.IsSuccessResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "IncrViewsCount",
        __Marshaller_FilmIdRequest,
        __Marshaller_IsSuccessResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcFilmService.FilmIdRequest, global::GrpcFilmService.IsSuccessResponse> __Method_IncrWillWatchCount = new grpc::Method<global::GrpcFilmService.FilmIdRequest, global::GrpcFilmService.IsSuccessResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "IncrWillWatchCount",
        __Marshaller_FilmIdRequest,
        __Marshaller_IsSuccessResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcFilmService.FilmIdRequest, global::GrpcFilmService.IsSuccessResponse> __Method_DecrWillWatchCount = new grpc::Method<global::GrpcFilmService.FilmIdRequest, global::GrpcFilmService.IsSuccessResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DecrWillWatchCount",
        __Marshaller_FilmIdRequest,
        __Marshaller_IsSuccessResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcFilmService.FilmIdRequest, global::GrpcFilmService.IsSuccessResponse> __Method_IncrShareCount = new grpc::Method<global::GrpcFilmService.FilmIdRequest, global::GrpcFilmService.IsSuccessResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "IncrShareCount",
        __Marshaller_FilmIdRequest,
        __Marshaller_IsSuccessResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcFilmService.FilmIdRequest, global::GrpcFilmService.IsSuccessResponse> __Method_IncrWatchedCount = new grpc::Method<global::GrpcFilmService.FilmIdRequest, global::GrpcFilmService.IsSuccessResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "IncrWatchedCount",
        __Marshaller_FilmIdRequest,
        __Marshaller_IsSuccessResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcFilmService.FilmIdRequest, global::GrpcFilmService.IsSuccessResponse> __Method_DecrWatchedCount = new grpc::Method<global::GrpcFilmService.FilmIdRequest, global::GrpcFilmService.IsSuccessResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DecrWatchedCount",
        __Marshaller_FilmIdRequest,
        __Marshaller_IsSuccessResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcFilmService.ScoreRequest, global::GrpcFilmService.IsSuccessResponse> __Method_Score = new grpc::Method<global::GrpcFilmService.ScoreRequest, global::GrpcFilmService.IsSuccessResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Score",
        __Marshaller_ScoreRequest,
        __Marshaller_IsSuccessResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GrpcFilmService.FilmGrpcServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for FilmServiceProto</summary>
    public partial class FilmServiceProtoClient : grpc::ClientBase<FilmServiceProtoClient>
    {
      /// <summary>Creates a new client for FilmServiceProto</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public FilmServiceProtoClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for FilmServiceProto that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public FilmServiceProtoClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected FilmServiceProtoClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected FilmServiceProtoClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcFilmService.IsSuccessResponse IncrNotInterestingCount(global::GrpcFilmService.FilmIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return IncrNotInterestingCount(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcFilmService.IsSuccessResponse IncrNotInterestingCount(global::GrpcFilmService.FilmIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_IncrNotInterestingCount, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcFilmService.IsSuccessResponse> IncrNotInterestingCountAsync(global::GrpcFilmService.FilmIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return IncrNotInterestingCountAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcFilmService.IsSuccessResponse> IncrNotInterestingCountAsync(global::GrpcFilmService.FilmIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_IncrNotInterestingCount, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcFilmService.IsSuccessResponse DecrNotInterestingCount(global::GrpcFilmService.FilmIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DecrNotInterestingCount(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcFilmService.IsSuccessResponse DecrNotInterestingCount(global::GrpcFilmService.FilmIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DecrNotInterestingCount, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcFilmService.IsSuccessResponse> DecrNotInterestingCountAsync(global::GrpcFilmService.FilmIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DecrNotInterestingCountAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcFilmService.IsSuccessResponse> DecrNotInterestingCountAsync(global::GrpcFilmService.FilmIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DecrNotInterestingCount, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcFilmService.IsSuccessResponse IncrViewsCount(global::GrpcFilmService.FilmIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return IncrViewsCount(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcFilmService.IsSuccessResponse IncrViewsCount(global::GrpcFilmService.FilmIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_IncrViewsCount, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcFilmService.IsSuccessResponse> IncrViewsCountAsync(global::GrpcFilmService.FilmIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return IncrViewsCountAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcFilmService.IsSuccessResponse> IncrViewsCountAsync(global::GrpcFilmService.FilmIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_IncrViewsCount, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcFilmService.IsSuccessResponse IncrWillWatchCount(global::GrpcFilmService.FilmIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return IncrWillWatchCount(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcFilmService.IsSuccessResponse IncrWillWatchCount(global::GrpcFilmService.FilmIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_IncrWillWatchCount, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcFilmService.IsSuccessResponse> IncrWillWatchCountAsync(global::GrpcFilmService.FilmIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return IncrWillWatchCountAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcFilmService.IsSuccessResponse> IncrWillWatchCountAsync(global::GrpcFilmService.FilmIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_IncrWillWatchCount, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcFilmService.IsSuccessResponse DecrWillWatchCount(global::GrpcFilmService.FilmIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DecrWillWatchCount(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcFilmService.IsSuccessResponse DecrWillWatchCount(global::GrpcFilmService.FilmIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DecrWillWatchCount, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcFilmService.IsSuccessResponse> DecrWillWatchCountAsync(global::GrpcFilmService.FilmIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DecrWillWatchCountAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcFilmService.IsSuccessResponse> DecrWillWatchCountAsync(global::GrpcFilmService.FilmIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DecrWillWatchCount, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcFilmService.IsSuccessResponse IncrShareCount(global::GrpcFilmService.FilmIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return IncrShareCount(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcFilmService.IsSuccessResponse IncrShareCount(global::GrpcFilmService.FilmIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_IncrShareCount, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcFilmService.IsSuccessResponse> IncrShareCountAsync(global::GrpcFilmService.FilmIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return IncrShareCountAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcFilmService.IsSuccessResponse> IncrShareCountAsync(global::GrpcFilmService.FilmIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_IncrShareCount, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcFilmService.IsSuccessResponse IncrWatchedCount(global::GrpcFilmService.FilmIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return IncrWatchedCount(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcFilmService.IsSuccessResponse IncrWatchedCount(global::GrpcFilmService.FilmIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_IncrWatchedCount, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcFilmService.IsSuccessResponse> IncrWatchedCountAsync(global::GrpcFilmService.FilmIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return IncrWatchedCountAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcFilmService.IsSuccessResponse> IncrWatchedCountAsync(global::GrpcFilmService.FilmIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_IncrWatchedCount, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcFilmService.IsSuccessResponse DecrWatchedCount(global::GrpcFilmService.FilmIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DecrWatchedCount(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcFilmService.IsSuccessResponse DecrWatchedCount(global::GrpcFilmService.FilmIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DecrWatchedCount, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcFilmService.IsSuccessResponse> DecrWatchedCountAsync(global::GrpcFilmService.FilmIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DecrWatchedCountAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcFilmService.IsSuccessResponse> DecrWatchedCountAsync(global::GrpcFilmService.FilmIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DecrWatchedCount, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcFilmService.IsSuccessResponse Score(global::GrpcFilmService.ScoreRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Score(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcFilmService.IsSuccessResponse Score(global::GrpcFilmService.ScoreRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Score, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcFilmService.IsSuccessResponse> ScoreAsync(global::GrpcFilmService.ScoreRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ScoreAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcFilmService.IsSuccessResponse> ScoreAsync(global::GrpcFilmService.ScoreRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Score, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override FilmServiceProtoClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new FilmServiceProtoClient(configuration);
      }
    }

  }
}
#endregion
